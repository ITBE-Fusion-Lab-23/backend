version: "3.8"

services:
  ###################################################################################
  #backend repo
  ###################################################################################
  mock-frontend:
    container_name: mock-frontend
    build:
      context: ./mock-frontend
    ports:
      - 8080:8080

  review-server:
    container_name: review-server
    build:
      context: ./review-microservice
      target: dev
    restart: unless-stopped
    environment:
      - CONN_STR=mongodb://fusionlab-groupa:fuslabgroupa2023@review-db:27017/review?authSource=admin&retryWrites=true&w=majority
    secrets:
      - conn-string
    ports:
      - 3000:3000
    depends_on:
      - review-db
    volumes:
      - ./review-microservice:/usr/src/app/
      - /usr/src/app/node_modules
  review-db:
    container_name: review-db
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongodb_root_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongodb_root_password
      # MONGO_USERNAME: jeffreylimnardy
      # MONGO_PASSWORD: fusionlab-groupa
      MONGO_INITDB_DATABASE: admin
      # MONGO_DATABASE: review
    secrets:
      - mongodb_root_username
      - mongodb_root_password
    ports:
      - 27017:27017
    volumes:
      - ./review-db/review-data:/data/db
    command: ["mongod", "--auth", "--port", "27017"]

  ###################################################################################
  #3dcitydb repo
  ###################################################################################

  3d-city-db:
    image: "3dcitydb/3dcitydb-pg:latest"
    container_name: 3d-city-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    user: root
    environment:
      SRID: 32632
      POSTGRES_PASSWORD: FusionLab
    volumes:
      - ./3dcitydb/pg-data/:/var/lib/postgresql/data

  #Import/Export service that has to be started for every operation
  #Import GML File into 3D City DB:
  #docker compose run -it --rm impexp import 688_5334.gml
  #Export Visualisation for 3D City objects:
  #docker compose run -it --rm impexp export-vis -o 688_5334.kml -j -D collada -l 2 -G --gltf-binary --gltf-embed-textures
  impexp:
    image: "3dcitydb/impexp:latest"
    container_name: impexp
    restart: no
    user: root
    environment:
      CITYDB_TYPE: postgresql
      CITYDB_HOST: 3d-city-db
      CITYDB_PORT: 5432
      CITYDB_NAME: postgres
      CITYDB_USERNAME: postgres
      CITYDB_PASSWORD: FusionLab
    volumes:
      - ./3dcitydb/CityGMLData/:/data

  #3D City DB's web ui with map and everything
  #For thematic data, data has to be linked with Add/Configure Layer
  # Example:
      #URL: rightclick MASTERjson in data for copy link
      #ThematicDataUrl: http://localhost:5433/fusionlab_building_view
      #Thematic Data Source: PostgreSQL REST API
      #See View_SQL View has to be created in 3dcitydb that connects the tables and shows the relevant info
      #MaxCoutnOfVisibleTiles for best performance in large dataset
  #Terrain: https://bvv3d21.bayernwolke.de/3d-data/latest/terrain/
  #old Bridge GMLID: DEBY_LOD2_107655971
  #Scene Link:
  #http://10.162.246.145:8000/3dwebclient/?t=3DCityDB-Web-Map-Client&s=true&ts=0&la=48.140495&lo=11.530858&h=636.491&hd=48.87&p=-14.61&r=0.15&l_0=u%3Dhttp%253A%252F%252F10.162.246.145%253A8000%252Fdata%252FNewBridge%252FNewBridge_collada_MasterJSON.json%26n%3DNew%2520Bridge%26ld%3DCOLLADA%252FKML%252FglTF%26lp%3Dfalse%26lc%3Dtrue%26gv%3D2.0%26a%3Dtrue%26tdu%3Dhttp%253A%252F%252F10.162.246.145%253A5433%252Ffusionlab_bridge%26ds%3DPostgreSQL%26tt%3DHorizontal%26gc%3D%26il%3D0%26al%3D1.7976931348623157e%252B308%26ac%3D200%26av%3D200&l_1=u%3Dhttp%253A%252F%252F10.162.246.145%253A8000%252Fdata%252FLaneModel%252FLaneModel_collada_MasterJSON.json%26n%3DLane%2520Model%26ld%3DCOLLADA%252FKML%252FglTF%26lp%3Dfalse%26lc%3Dtrue%26gv%3D2.0%26a%3Dfalse%26tdu%3Dhttp%253A%252F%252F10.162.246.145%253A5433%252Ffusionlab_lanemodel_view%26ds%3DPostgreSQL%26tt%3DHorizontal%26gc%3D%26il%3D0%26al%3D1.7976931348623157e%252B308%26ac%3D200%26av%3D200&l_2=u%3Dhttp%253A%252F%252F10.162.246.145%253A8000%252Fdata%252FExistingBridge%252FExistingBridge_collada_MasterJSON.json%26n%3DExisting%2520Bridge%26ld%3DCOLLADA%252FKML%252FglTF%26lp%3Dfalse%26lc%3Dtrue%26gv%3D2.0%26a%3Dfalse%26tdu%3Dhttp%253A%252F%252F10.162.246.145%253A5433%252Ffusionlab_building_view%26ds%3DPostgreSQL%26tt%3DHorizontal%26gc%3D%26il%3D0%26al%3D1.7976931348623157e%252B308%26ac%3D200%26av%3D200&l_3=u%3Dhttp%253A%252F%252F10.162.246.145%253A8000%252Fdata%252FBuildings%252FBuildings_collada_MasterJSON.json%26n%3DBuildings%26ld%3DCOLLADA%252FKML%252FglTF%26lp%3Dfalse%26lc%3Dtrue%26gv%3D2.0%26a%3Dtrue%26tdu%3Dhttp%253A%252F%252F10.162.246.145%253A5433%252Ffusionlab_building_view%26ds%3DPostgreSQL%26tt%3DHorizontal%26gc%3D%26il%3D0%26al%3D1.7976931348623157e%252B308%26ac%3D200%26av%3D200&tr=name%3DDTM%26iconUrl%3D%26tooltip%3D%26url%3Dhttps%253A%252F%252Fbvv3d21.bayernwolke.de%252F3d-data%252Flatest%252Fterrain%252F
  web-client:
    image: "tumgis/3dcitydb-web-map:latest"
    # build: .
    container_name: web-client
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./3dcitydb/CityGMLData/:/var/www/data/

  #REST API for 3d City DB to host thamtic data locally
  #Custom View has to be created to create one endpoint for all objects in one Cesium Scene
  #SQL Command to create the view at: ./View_SQL.txt
  postgrest:
    image: "postgrest/postgrest"
    container_name: postgrest
    restart: no
    ports:
      - "5433:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:FusionLab@3d-city-db:5432/postgres
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:5433
      PGRST_DB_SCHEMA: citydb
      PGRST_DB_ANON_ROLE: postgres
    depends_on:
      - 3d-city-db

secrets:
  conn-string:
    file: ./review-microservice/secrets/conn_str.txt
  mongodb_root_username:
    file: ./review-db/secrets/mongodb_root_username.txt
  mongodb_root_password:
    file: ./review-db/secrets/mongodb_root_password.txt
